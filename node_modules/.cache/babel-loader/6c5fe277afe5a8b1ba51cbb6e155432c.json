{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\closa\\\\Documents\\\\GitHub\\\\volunteer-hours\\\\src\\\\pages\\\\DataInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { useDocument } from \"react-firebase-hooks/firestore\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonInput, IonItem, IonLabel, IonList, IonButton, IonDatetime } from '@ionic/react';\nimport './DataInput.css'; //interface TextEntryProps {\n//    onSubmit: (homeName: string, homeHours: number, homeDate: string) => void;\n//}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function debugInfo(logInfo) {\n  console.log(logInfo.name, logInfo.hours, logInfo.date);\n}\n;\nexport function clearInfo(info) {\n  info.name = '';\n  info.hours = 0;\n  info.date = '';\n}\n;\n\nconst todaysDate = () => {\n  var today = new Date();\n  var editDate = today.toDateString();\n  const splitDate = editDate.split(' ');\n  var numMon = \"JanFebMarAprMayJunJulAugSepOctNovDec\".indexOf(splitDate[1]) / 3 + 1;\n  return splitDate[3] + \"-\" + splitDate[2] + \"-\" + numMon;\n};\n\nconst DataInput = props => {\n  _s();\n\n  const [item, setItem] = useState({\n    name: '',\n    hours: 0,\n    date: ''\n  });\n  const [value, loading, error] = useDocument(firebase.firestore().doc(\"items/\" + props.initialValue), {\n    snapshotListenOptions: {\n      includeMetadataChanges: true\n    }\n  });\n  useEffect(() => {\n    var _value$data;\n\n    !loading && props.initialValue && (value === null || value === void 0 ? void 0 : value.exists) && setItem((_value$data = value.data()) === null || _value$data === void 0 ? void 0 : _value$data.name);\n  }, [loading, props.initialValue, value]);\n\n  const getValid = async () => {\n    let collectionRef = firebase.firestore().collection(\"data\");\n\n    if (!item.date) {\n      item.date = todaysDate();\n    }\n\n    if (props.name) {\n      //console.log(\"Name populated! name: \" + item.name + \", Hours: \" + item.hours + \", Date: \" + item.date)\n      await collectionRef.doc(props.name).set({\n        name: item.name,\n        hours: item.hours,\n        date: item.date,\n        createdOn: new Date().getTime()\n      }, {\n        merge: true\n      });\n      clearInfo(item);\n      setItem(item);\n      props.clear();\n    } else {\n      //console.log(\"Name new! name: \" + item.name + \", Hours: \" + item.hours + \", Date: \" + item.date)\n      await collectionRef.add({\n        name: item.name,\n        hours: item.hours,\n        date: item.date,\n        createdOn: new Date().getTime()\n      });\n      clearInfo(item);\n      setItem(item);\n      props.clear();\n    }\n  };\n\n  const updateField = e => {\n    e.preventDefault();\n    console.log(item.name, item.hours, item.date);\n    debugInfo(item);\n    setItem({ ...item,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(IonTitle, {\n          children: \"Enter Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(IonList, {\n        children: [/*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"stacked\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            required: true,\n            value: item.name,\n            name: \"name\",\n            onIonChange: updateField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"stacked\",\n            children: \"Hours Worked:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            required: true,\n            type: \"number\",\n            value: item.hours,\n            name: \"hours\",\n            onIonChange: updateField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"stacked\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IonDatetime, {\n            placeholder: todaysDate(),\n            value: item.date,\n            name: \"date\",\n            onIonChange: updateField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n        type: \"submit\",\n        onClick: () => {\n          getValid();\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataInput, \"Q1Uf4Kg5WkjC1vdiEopJ8lLXYgQ=\", false, function () {\n  return [useDocument];\n});\n\n_c = DataInput;\nexport default DataInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataInput\");","map":{"version":3,"sources":["C:/Users/closa/Documents/GitHub/volunteer-hours/src/pages/DataInput.tsx"],"names":["React","useState","useEffect","firebase","useDocument","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonInput","IonItem","IonLabel","IonList","IonButton","IonDatetime","debugInfo","logInfo","console","log","name","hours","date","clearInfo","info","todaysDate","today","Date","editDate","toDateString","splitDate","split","numMon","indexOf","DataInput","props","item","setItem","value","loading","error","firestore","doc","initialValue","snapshotListenOptions","includeMetadataChanges","exists","data","getValid","collectionRef","collection","set","createdOn","getTime","merge","clear","add","updateField","e","preventDefault","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport {Plugins} from '@capacitor/core';\nimport DataProps from '../components/DataProps';\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, \n    IonInput, IonItem, IonLabel, IonList, IonButton, IonDatetime } from '@ionic/react';\nimport { Controller, useForm } from 'react-hook-form';\nimport './DataInput.css';\n\n\n//interface TextEntryProps {\n//    onSubmit: (homeName: string, homeHours: number, homeDate: string) => void;\n//}\nexport function debugInfo(logInfo: DataProps){\n    console.log(logInfo.name,logInfo.hours,logInfo.date);\n};\n\nexport function clearInfo(info: DataProps){\n    info.name='';\n    info.hours=0;\n    info.date='';\n};\n\n\nconst todaysDate = () => {\n    var today = new Date();\n    var editDate = today.toDateString(); \n    const splitDate = editDate.split(' ');\n    var numMon = \"JanFebMarAprMayJunJulAugSepOctNovDec\".indexOf(splitDate[1]) / 3 + 1;\n    return(splitDate[3] + \"-\" + splitDate[2] + \"-\" + numMon);\n};\n\nconst DataInput: React.FC<DataProps> = (props) => {\n    const [item, setItem] = useState<DataProps>({\n        name: '',\n        hours: 0,\n        date: '',\n      });\n    \n    const [value, loading, error] = useDocument(\n        firebase.firestore().doc(\"items/\" + props.initialValue),\n        {\n            snapshotListenOptions: {includeMetadataChanges: true}\n        }\n    );\n\n    useEffect(() => {\n        !loading && props.initialValue && value?.exists && setItem(value.data()?.name);\n    }, \n    [loading, props.initialValue, value]);\n    \n    const getValid = async () => {\n\n        let collectionRef = firebase.firestore().collection(\"data\");\n        if(!item.date) {\n            item.date = todaysDate();\n        }\n\n        if(props.name) {\n            //console.log(\"Name populated! name: \" + item.name + \", Hours: \" + item.hours + \", Date: \" + item.date)\n            await(collectionRef).doc(props.name).set({name: item.name, hours: item.hours, date: item.date,\n                createdOn: new Date().getTime(),}, {merge:true});\n            clearInfo(item);\n            setItem(item);\n                props.clear();\n        }\n        else {\n            //console.log(\"Name new! name: \" + item.name + \", Hours: \" + item.hours + \", Date: \" + item.date)\n            await collectionRef.add({name: item.name, hours: item.hours, date: item.date, \n                createdOn: new Date().getTime(),\n                });\n            clearInfo(item);\n            setItem(item);\n            props.clear();\n        }\n\n    };\n    \n      const updateField = (e: any) => {\n        e.preventDefault();\n        console.log(item.name,item.hours,item.date);\n        debugInfo(item);\n        setItem({\n          ...item,\n          [e.target.name]: e.target.value\n        });\n      };\n    \n    return (\n        <IonPage>\n          <IonHeader>\n            <IonToolbar>\n              <IonTitle>Enter Data</IonTitle>\n            </IonToolbar>\n          </IonHeader>\n          <IonContent>\n                <IonList>\n                    <IonItem>\n                        <IonLabel position=\"stacked\">Name:</IonLabel>\n                        <IonInput required={true} value={item.name}  name=\"name\" onIonChange={updateField}></IonInput>\n                    </IonItem>\n                    <IonItem>\n                        <IonLabel position=\"stacked\">Hours Worked:</IonLabel>\n                        <IonInput required={true} type=\"number\" value={item.hours} name=\"hours\" onIonChange={updateField}></IonInput>\n                    </IonItem>\n                    <IonItem>\n                        <IonLabel position=\"stacked\">Date:</IonLabel>\n                        <IonDatetime placeholder={todaysDate()} value={item.date} name=\"date\" onIonChange={updateField}></IonDatetime>\n                    </IonItem>\n                </IonList>\n                <IonButton type=\"submit\" onClick={()=>{\n                    getValid();\n                }}>Submit</IonButton>\n          </IonContent>\n        </IonPage>\n      );\n};\nexport default DataInput;\n"]},"metadata":{},"sourceType":"module"}