[{"C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\index.tsx":"1","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\reportWebVitals.ts":"2","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\serviceWorkerRegistration.ts":"3","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\App.tsx":"4","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\components\\ExploreContainer.tsx":"5","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\pages\\DataInput.tsx":"6","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\pages\\ViewData.tsx":"7","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\components\\private\\keys.ts":"8"},{"size":796,"mtime":1621956574000,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1621956574000,"results":"11","hashOfConfig":"10"},{"size":5256,"mtime":1621956574000,"results":"12","hashOfConfig":"10"},{"size":3285,"mtime":1622063257191,"results":"13","hashOfConfig":"10"},{"size":407,"mtime":1621956574000,"results":"14","hashOfConfig":"10"},{"size":4340,"mtime":1622063313812,"results":"15","hashOfConfig":"10"},{"size":862,"mtime":1622063216754,"results":"16","hashOfConfig":"10"},{"size":472,"mtime":1622063154795,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"16p9pfu",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\index.tsx",[],["38","39"],"C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\reportWebVitals.ts",[],"C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\serviceWorkerRegistration.ts",[],"C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\App.tsx",["40"],"import React, {useState} from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n  IonApp, IonIcon, IonLabel, IonRouterOutlet, IonTabBar, IonTabButton, IonTabs,} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { ellipse, list } from 'ionicons/icons';\nimport DataInput from './pages/DataInput';\nimport ViewData from './pages/ViewData';\nimport DataProps from './components/DataProps';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\n//Firebase import\nimport firebase from 'firebase/app';\nimport { firebaseAPI } from './components/private/keys';\n\nfirebase.initializeApp(firebaseAPI());\n\nconst App: React.FC = () => {\n    const [current, setCurrent] = useState<DataProps | null>(null);\n\n    const getEmpty=()=>{\n    return ({\n        name: '',\n        hours: 0,\n        date: '',\n        location: '',\n        clear:'',\n        initialValue:''\n        });\n    }\n    const onEntry = (newName: string, newHours: number, newDate: string) => {\n        \n        if(newName) {\n            if(newDate.charAt(0) <='9' && newDate.charAt(0) >= '0') {\n                const loseTime = newDate.split('T');\n                console.log(\"Data Output: Name: \" + newName + \", Hours: \" + newHours + \", Date: \" + loseTime[0] );\n            }\n            else {\n                const words = newDate.split(' ');\n                var numMon = \"JanFebMarAprMayJunJulAugSepOctNovDec\".indexOf(words[1]) / 3 + 1;\n                console.log(words[3] + \"-\" + words[2] + \"-\" + numMon);\n            }\n        }\n        else {\n            alert(\"Name Field\")\n        }\n    }\n    return (\n        <IonApp>\n            <IonReactRouter>\n            <IonTabs>\n                <IonRouterOutlet>\n                <Route exact path=\"/DataInput\">\n                    <DataInput initialValue={current} clear={()=>setCurrent(getEmpty())}/>\n                </Route>\n                <Route exact path=\"/ViewData\">\n                    <ViewData />\n                </Route>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/DataInput\" />\n                </Route>\n                </IonRouterOutlet>\n                <IonTabBar slot=\"bottom\">\n                <IonTabButton tab=\"DataInput\" href=\"/DataInput\">\n                    <IonIcon icon={list} />\n                    <IonLabel>Input</IonLabel>\n                </IonTabButton>\n                <IonTabButton tab=\"ViewData\" href=\"/ViewData\">\n                    <IonIcon icon={ellipse} />\n                    <IonLabel>View Data</IonLabel>\n                </IonTabButton>\n                \n                </IonTabBar>\n            </IonTabs>\n            </IonReactRouter>\n        </IonApp>\n    );\n};\nexport default App;\n","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\components\\ExploreContainer.tsx",[],"C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\pages\\DataInput.tsx",["41","42","43","44"],"import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport {Plugins} from '@capacitor/core';\nimport DataProps from '../components/DataProps';\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, \n    IonInput, IonItem, IonLabel, IonList, IonButton, IonDatetime } from '@ionic/react';\nimport { Controller, useForm } from 'react-hook-form';\nimport './DataInput.css';\n\n\n//interface TextEntryProps {\n//    onSubmit: (homeName: string, homeHours: number, homeDate: string) => void;\n//}\nexport function debugInfo(logInfo: DataProps){\n    console.log(logInfo.name,logInfo.hours,logInfo.date);\n};\n\nexport function clearInfo(info: DataProps){\n    info.name='';\n    info.hours=0;\n    info.date='';\n};\n\n\nconst todaysDate = () => {\n    var today = new Date();\n    var editDate = today.toDateString(); \n    const splitDate = editDate.split(' ');\n    var numMon = \"JanFebMarAprMayJunJulAugSepOctNovDec\".indexOf(splitDate[1]) / 3 + 1;\n    if(numMon < 10) {\n        return(splitDate[3] + \"-\" + splitDate[2] + \"-0\" + numMon);\n    }\n    else {\n        return(splitDate[3] + \"-\" + splitDate[2] + \"-\" + numMon);\n    }\n};\n\nconst DataInput: React.FC<DataProps> = (props) => {\n    const [item, setItem] = useState<DataProps>({\n        name: '',\n        hours: 0,\n        date: '',\n      });\n    \n    const [value, loading, error] = useDocument(\n        firebase.firestore().doc(\"items/\" + props.initialValue),\n        {\n            snapshotListenOptions: {includeMetadataChanges: true}\n        }\n    );\n\n    useEffect(() => {\n        !loading && props.initialValue && value?.exists && setItem(value.data()?.name);\n    }, \n    [loading, props.initialValue, value]);\n    \n    const getValid = async () => {\n\n        let collectionRef = firebase.firestore().collection(\"data\");\n        if(!item.date) {\n            item.date = todaysDate();\n        }\n        else {\n            const newDate = item.date.split('T');\n            item.date = newDate[0];\n        }\n\n        if(props.name) {\n            //console.log(\"Name populated! name: \" + item.name + \", Hours: \" + item.hours + \", Date: \" + item.date)\n            await(collectionRef).doc(props.name).set({name: item.name, hours: item.hours, date: item.date,\n                createdOn: new Date().getTime(),}, {merge:true});\n            clearInfo(item);\n            setItem(item);\n                props.clear();\n        }\n        else {\n            //console.log(\"Name new! name: \" + item.name + \", Hours: \" + item.hours + \", Date: \" + item.date)\n            await collectionRef.add({name: item.name, hours: item.hours, date: item.date, \n                createdOn: new Date().getTime(),\n                });\n            clearInfo(item);\n            setItem(item);\n            props.clear();\n        }\n\n    };\n    \n      const updateField = (e: any) => {\n        e.preventDefault();\n        //console.log(item.name,item.hours,item.date);\n        debugInfo(item);\n        setItem({\n          ...item,\n          [e.target.name]: e.target.value\n        });\n      };\n    \n    return (\n        <IonPage>\n          <IonHeader>\n            <IonToolbar>\n              <IonTitle>Enter Data</IonTitle>\n            </IonToolbar>\n          </IonHeader>\n          <IonContent>\n                <IonList>\n                    <IonItem>\n                        <IonLabel position=\"stacked\">Name:</IonLabel>\n                        <IonInput required={true} value={item.name}  name=\"name\" onIonChange={updateField}></IonInput>\n                    </IonItem>\n                    <IonItem>\n                        <IonLabel position=\"stacked\">Hours Worked:</IonLabel>\n                        <IonInput required={true} type=\"number\" value={item.hours} name=\"hours\" onIonChange={updateField}></IonInput>\n                    </IonItem>\n                    <IonItem>\n                        <IonLabel position=\"stacked\">Date:</IonLabel>\n                        <IonDatetime placeholder={todaysDate()} value={item.date} name=\"date\" onIonChange={updateField}></IonDatetime>\n                    </IonItem>\n                </IonList>\n                <IonButton type=\"submit\" onClick={()=>{\n                    getValid();\n                }}>Submit</IonButton>\n          </IonContent>\n        </IonPage>\n      );\n};\nexport default DataInput;\n","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\pages\\ViewData.tsx",["45","46","47","48"],"import React, {useState} from 'react';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport ExploreContainer from '../components/ExploreContainer';\nimport './ViewData.css';\nimport firebase from 'firebase';\nimport { useCollection } from 'react-firebase-hooks/firestore';\n\nconst ViewData: React.FC = () => {\n    const [current, setCurrent] = useState(null);\n    \n    return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>View Data</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">View Data</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <ExploreContainer name=\"View Data Page\" />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ViewData;\n","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\components\\private\\keys.ts",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":49,"column":11,"nodeType":"55","messageId":"56","endLine":49,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":3,"column":9,"nodeType":"55","messageId":"56","endLine":3,"endColumn":16},{"ruleId":"53","severity":1,"message":"58","line":8,"column":10,"nodeType":"55","messageId":"56","endLine":8,"endColumn":20},{"ruleId":"53","severity":1,"message":"59","line":8,"column":22,"nodeType":"55","messageId":"56","endLine":8,"endColumn":29},{"ruleId":"53","severity":1,"message":"60","line":46,"column":28,"nodeType":"55","messageId":"56","endLine":46,"endColumn":33},{"ruleId":"53","severity":1,"message":"61","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":16},{"ruleId":"53","severity":1,"message":"62","line":6,"column":10,"nodeType":"55","messageId":"56","endLine":6,"endColumn":23},{"ruleId":"53","severity":1,"message":"63","line":9,"column":12,"nodeType":"55","messageId":"56","endLine":9,"endColumn":19},{"ruleId":"53","severity":1,"message":"64","line":9,"column":21,"nodeType":"55","messageId":"56","endLine":9,"endColumn":31},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"@typescript-eslint/no-unused-vars","'onEntry' is assigned a value but never used.","Identifier","unusedVar","'Plugins' is defined but never used.","'Controller' is defined but never used.","'useForm' is defined but never used.","'error' is assigned a value but never used.","'firebase' is defined but never used.","'useCollection' is defined but never used.","'current' is assigned a value but never used.","'setCurrent' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]