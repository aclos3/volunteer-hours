[{"C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\index.tsx":"1","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\reportWebVitals.ts":"2","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\serviceWorkerRegistration.ts":"3","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\App.tsx":"4","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\pages\\DataInput.tsx":"5","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\pages\\ViewData.tsx":"6","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\components\\private\\keys.ts":"7","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\components\\dataList.tsx":"8","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\components\\dataElement.tsx":"9"},{"size":796,"mtime":1621956574000,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1621956574000,"results":"12","hashOfConfig":"11"},{"size":5256,"mtime":1621956574000,"results":"13","hashOfConfig":"11"},{"size":2607,"mtime":1622067030996,"results":"14","hashOfConfig":"11"},{"size":4413,"mtime":1622083828622,"results":"15","hashOfConfig":"11"},{"size":962,"mtime":1622066996004,"results":"16","hashOfConfig":"11"},{"size":966,"mtime":1622131356002,"results":"17","hashOfConfig":"11"},{"size":1332,"mtime":1622083865964,"results":"18","hashOfConfig":"11"},{"size":1569,"mtime":1622084108267,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"16p9pfu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\index.tsx",[],["43","44"],"C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\reportWebVitals.ts",[],"C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\serviceWorkerRegistration.ts",[],"C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\App.tsx",[],"C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\pages\\DataInput.tsx",["45"],"import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport DataProps from '../components/DataProps';\nimport {useDocument} from \"react-firebase-hooks/firestore\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, \n    IonInput, IonItem, IonLabel, IonList, IonButton, IonDatetime } from '@ionic/react';\nimport './DataInput.css';\n\nexport function debugInfo(logInfo: DataProps){\n    console.log(logInfo.name,logInfo.hours,logInfo.date);\n};\n\nexport function clearInfo(info: DataProps){\n    info.name='';\n    info.hours=0;\n    info.date='';\n};\n\nconst todaysDate = () => {\n    var today = new Date();\n    var editDate = today.toDateString(); \n    const splitDate = editDate.split(' ');\n    var numMon = \"JanFebMarAprMayJunJulAugSepOctNovDec\".indexOf(splitDate[1]) / 3 + 1;\n    if(numMon < 10) {\n        return(splitDate[3] + \"-0\" + numMon + \"-\" + splitDate[2]);\n    }\n    else {\n        return(splitDate[3] + \"-\" + numMon + \"-\" + splitDate[2]);\n    }\n};\n\nconst DataInput: React.FC<DataProps> = (props) => {\n    const [item, setItem] = useState<DataProps>({\n        name: '',\n        hours: 0,\n        date: '',\n      });\n    \n    const [value, loading, error] = useDocument(\n        firebase.firestore().doc(\"items/\" + props.initialValue),\n        {\n            snapshotListenOptions: {includeMetadataChanges: true}\n        }\n    );\n\n    useEffect(() => {\n        !loading && props.initialValue && value?.exists && setItem(value.data()?.name);\n    }, \n    [loading, props.initialValue, value]);\n    \n    const getValid = async () => {\n        if(!item.name || item.hours === 0 || !item.hours) {\n            alert(\"Name and hours cannot be blank.\")\n        }\n        else if(item.hours < 0) {\n            alert(\"Hours cannot be negative.\")\n        }\n        else {       \n            let collectionRef = firebase.firestore().collection(\"data\");\n            if(!item.date) {\n                item.date = todaysDate();\n            }\n            else {\n                const newDate = item.date.split('T');\n                item.date = newDate[0];\n            }\n\n            if(props.name) {\n                //console.log(\"Name populated! name: \" + item.name + \", Hours: \" + item.hours + \", Date: \" + item.date)\n                await(collectionRef).doc(props.name).set({name: item.name, hours: item.hours, date: item.date,\n                    createdOn: new Date().getTime(),}, {merge:true});\n                clearInfo(item);\n                setItem(item);\n                    props.clear();\n            }\n            else {\n                //console.log(\"Name new! name: \" + item.name + \", Hours: \" + item.hours + \", Date: \" + item.date)\n                await collectionRef.add({name: item.name, hours: item.hours, date: item.date, \n                    createdOn: new Date().getTime(),\n                    });\n                clearInfo(item);\n                setItem(item);\n                props.clear();\n            }\n        }\n    };\n    \n    const updateField = (e: any) => {\n        e.preventDefault();\n        debugInfo(item);\n        setItem({\n          ...item,\n          [e.target.name]: e.target.value\n        });\n    };\n    \n    return (\n        <IonPage>\n          <IonHeader>\n            <IonToolbar>\n              <IonTitle>Enter Data</IonTitle>\n            </IonToolbar>\n          </IonHeader>\n          <IonContent>\n                <IonList>\n                    <IonItem>\n                        <IonLabel position=\"stacked\">Name:</IonLabel>\n                        <IonInput required={true} value={item.name}  name=\"name\" onIonChange={updateField}></IonInput>\n                    </IonItem>\n                    <IonItem>\n                        <IonLabel position=\"stacked\">Hours Worked:</IonLabel>\n                        <IonInput required={true} type=\"number\" value={item.hours} name=\"hours\" onIonChange={updateField}></IonInput>\n                    </IonItem>\n                    <IonItem>\n                        <IonLabel position=\"stacked\">Date:</IonLabel>\n                        <IonDatetime placeholder={todaysDate()} value={item.date} name=\"date\" onIonChange={updateField}></IonDatetime>\n                    </IonItem>\n                </IonList>\n                <IonButton type=\"submit\" onClick={()=>{\n                    getValid();\n                }}>Submit</IonButton>\n          </IonContent>\n        </IonPage>\n      );\n};\nexport default DataInput;\n","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\pages\\ViewData.tsx",["46","47"],"import React, {useState} from 'react';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport './ViewData.css';\nimport DataList from '../components/dataList';\n\nconst ViewData: React.FC = () => {\n    const [current, setCurrent] = useState(null);\n    const getEmpty=()=>{\n        return ({\n          title: '',\n          content: '',\n          date: '',\n          location: '',\n          picture: '',\n          clear:'',\n          initialValue:''\n        });\n    }\n\n    return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>View Data</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">View Data</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <DataList doEdit={setCurrent}></DataList>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ViewData;\n","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\components\\private\\keys.ts",[],"C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\components\\dataList.tsx",["48"],"import React from 'react';\r\nimport Item from \"./dataElement\";\r\nimport firebase from 'firebase';\r\nimport {useCollection} from \"react-firebase-hooks/firestore\";\r\nimport {IonList} from '@ionic/react';\r\n\r\ninterface Props {\r\n    doEdit:any\r\n   }\r\nconst DataList: React.FC<Props> = ({doEdit}) => {\r\n    const [value, loading, error] = useCollection(\r\n        firebase.firestore().collection(\"data\").orderBy(\"date\",\"desc\"),\r\n        {\r\n            snapshotListenOptions:{includeMetadataChanges: true}\r\n        }\r\n    );\r\n    const closeSlidingItems = () => {\r\n        \r\n        let list = document.getElementById(\"list\") as any;\r\n        list.closeSlidingItems();\r\n    };\r\n    const doDelete = (id: any) => {\r\n        firebase.firestore().collection(\"data\").doc(id).delete();\r\n    };\r\n    return (\r\n        <IonList id=\"list\">\r\n            {value && \r\n            value.docs.map(doc => {\r\n                return (\r\n                    !loading && (\r\n                        <Item doc={doc}\r\n                        doDelete = {(i: any) => {\r\n                            closeSlidingItems();\r\n                            doDelete(i);\r\n                        }}\r\n                    key = {doc.id}\r\n                    />\r\n                    )\r\n                );\r\n            })}\r\n        </IonList>\r\n    );\r\n}\r\nexport default DataList;\r\n","C:\\Users\\closa\\Documents\\GitHub\\volunteer-hours\\src\\components\\dataElement.tsx",["49","50"],"import React from 'react';\r\nimport {IonItem, IonLabel, IonText, IonItemSliding, \r\nIonItemOption, IonItemOptions, IonIcon, IonImg} from '@ionic/react';\r\nimport {document, trash} from 'ionicons/icons';\r\n\r\ninterface Props {\r\n   doDelete:any,\r\n   doc:any\r\n  }\r\n\r\nconst Item: React.FC<Props> = ({doDelete, doc}) => {\r\n    let data = doc.data();\r\n    console.log(\"Data: \" + data.name);\r\n    return (\r\n        <IonItemSliding>\r\n            <IonItem>\r\n                <IonLabel class = \"ion-text-wrap\">\r\n                    <IonText className=\"item-title\">\r\n                        <div><strong>Name:</strong>&nbsp;\r\n                            {data.name}\r\n                        </div>\r\n                    </IonText>\r\n                    <IonText className=\"item-title\">\r\n                        <div><strong>Hours:</strong>&nbsp;\r\n                            {data.hours}\r\n                        </div>\r\n                    </IonText>\r\n                    <IonText className=\"item-sub-title\">\r\n                        <div><strong>Date:</strong>&nbsp;\r\n                            {data.date}\r\n                        </div>\r\n                    </IonText>\r\n                </IonLabel>\r\n                <div></div>\r\n            </IonItem>\r\n            <IonItemOptions> \r\n                <IonItemOption color=\"danger\" onClick= {() => doDelete(doc.id)}>\r\n                    <IonIcon slot=\"icon-only\" icon={trash}>\r\n                    </IonIcon>\r\n                </IonItemOption>\r\n            </IonItemOptions>\r\n        </IonItemSliding>\r\n    );\r\n}\r\nexport default Item;\r\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":39,"column":28,"nodeType":"57","messageId":"58","endLine":39,"endColumn":33},{"ruleId":"55","severity":1,"message":"59","line":7,"column":12,"nodeType":"57","messageId":"58","endLine":7,"endColumn":19},{"ruleId":"55","severity":1,"message":"60","line":8,"column":11,"nodeType":"57","messageId":"58","endLine":8,"endColumn":19},{"ruleId":"55","severity":1,"message":"56","line":11,"column":28,"nodeType":"57","messageId":"58","endLine":11,"endColumn":33},{"ruleId":"55","severity":1,"message":"61","line":3,"column":41,"nodeType":"57","messageId":"58","endLine":3,"endColumn":47},{"ruleId":"55","severity":1,"message":"62","line":4,"column":9,"nodeType":"57","messageId":"58","endLine":4,"endColumn":17},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'current' is assigned a value but never used.","'getEmpty' is assigned a value but never used.","'IonImg' is defined but never used.","'document' is defined but never used.","no-global-assign","no-unsafe-negation"]